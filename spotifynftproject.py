# -*- coding: utf-8 -*-
"""SpotifyNFTProject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IcMlwXFL-cNAhRMsnEIo8bbVea7CWl_i
"""

!pip install spotipy

import spotipy
from spotipy.oauth2 import SpotifyClientCredentials

# Use your Client ID and Secret here
client_id = 'ba313d9de682411ca8e2800440611f09'
client_secret = '0878620c5f9842d69a80016fff5fe1e1'

# Use Client Credentials (no redirect needed)
client_credentials_manager = SpotifyClientCredentials(
    client_id=client_id,
    client_secret=client_secret
)

sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)

# Search for a song
results = sp.search(q='Levitating', type='track', limit=1)

# Show song metadata
track = results['tracks']['items'][0]
print("🎧 Track Name:", track['name'])
print("🎤 Artist:", track['artists'][0]['name'])
print("💽 Album:", track['album']['name'])
print("🔗 Preview URL:", track['preview_url'])
print("🔥 Popularity Score:", track['popularity'])

def fetch_track_info(song_name):
    results = sp.search(q=song_name, type='track', limit=1)
    if not results['tracks']['items']:
        return f"❌ No results found for: {song_name}"

    track = results['tracks']['items'][0]

    track_info = {
        "Track Name": track['name'],
        "Artist": track['artists'][0]['name'],
        "Album": track['album']['name'],
        "Popularity": track['popularity'],
        "Preview URL": track['preview_url'],
        "Album Art": track['album']['images'][0]['url'] if track['album']['images'] else None,
        "Spotify Link": track['external_urls']['spotify']
    }

    return track_info

fetch_track_info("Levitating Dua Lipa")

{
 'Track Name': 'Levitating',
 'Artist': 'Dua Lipa',
 'Album': 'Future Nostalgia',
 'Popularity': 92,
 'Preview URL': 'https://p.scdn.co/mp3-preview/...',
 'Album Art': 'https://i.scdn.co/image/...',
 'Spotify Link': 'https://open.spotify.com/track/...'
}

def generate_nft_description(track_info):
    prompt = f"""
Generate a one-paragraph NFT-style listing description for a music track using the following metadata:

🎧 Track Name: {track_info['Track Name']}
🎤 Artist: {track_info['Artist']}
💽 Album: {track_info['Album']}
🔥 Popularity Score: {track_info['Popularity']}
🔗 Spotify Link: {track_info['Spotify Link']}

Make it sound like a digital collectible, with emotional and commercial appeal.
"""

    return prompt

levitating_data = fetch_track_info("Levitating Dua Lipa")
print(generate_nft_description(levitating_data))

manual_descriptions = {
    "A Sky Full of Stars": "A euphoric blend of EDM heartbeat and Coldplay’s celestial soul. With soaring vocals and a cosmic drop that bursts like stardust, this track radiates hope, unity, and universal replay value. Minted for dreamers and festival-goers, this is a Legendary Drop in every sense. ✨🌌💫",

    "Good Days": "Soul-bending and meditative, Good Days is SZA’s audio diary of healing and internal battles. Its soft vocal layers and lo-fi instrumental wrap listeners in emotional warmth. A Rare Chill Token for collectors who value vulnerability, vibe, and vinyl-worthy emotional depth. 🌱💫",

    "Unforgettable": "With hypnotic afrobeat rhythms and Swae Lee’s floating hook, Unforgettable is a heatwave in audio form. It’s one of those endlessly loopable tracks with late-night dancefloor magic. An NFT classic that oozes High Replay Energy, minted for summer drops and global playlists alike. 🔥🌍",

    "I'll Never Love Again": "Lady Gaga’s vocal intensity pierces through orchestral stillness in this emotional farewell ballad. A spiritual, award-season centerpiece, this track captures mortality and love’s final stand. A Cinematic Signature Piece for collectors of art-pop emotion and goosebump ballads. 🎭🎼",

    "Birds of a Feather": "Haunting and ethereal, Birds of a Feather is a soft rebellion wrapped in delicate harmonies and eerie calm. With featherlight vocals and a whispered delivery, this is Billie at her most vulnerable. A Melancholy Mint crafted for dusk playlists and lo-fi dreamscapes. 🕊️🌫️",

    "DTFM": "DTFM delivers Bad Bunny’s signature reggaetón-meets-vibe fusion — a rhythmic, coastal escape packed with heat, swagger, and unapologetic flow. This one’s for collectors who live in playlists built for movement. A BailaBlock Certified NFT minted for sweaty summer nights. 🌴🔥",

    "Espresso": "Sassy, sharp, and sugar-rushed — Espresso is a caffeine shot of confidence wrapped in bubblegum brilliance. Sabrina struts through the track with lyrical sparkle and TikTok-tier catchiness. This one’s a Rare Pop Spike, minted for collector playlists that scream ✨fun ✨. ☕💃",

    "Chemtrails Over the Country Club": "Haunting, poetic, and laced with Americana mystery, Chemtrails glides like a slow-motion scene in a dream film. With noir-toned production and celestial vocals, it’s both grounded and otherworldly. A Mystic Vault Token for daydreamers and vintage souls. ☁️🚗🕊️"
}

import pandas as pd

songs = [
    "Coldplay A Sky Full of Stars",
    "SZA Good Days",
    "French Montana Unforgettable",
    "Lady Gaga I'll Never Love Again",
    "Billie Eilish Birds of a Feather",
    "Bad Bunny DTFM",
    "Sabrina Carpenter Espresso",
    "Lana Del Rey Chemtrails Over the Country Club"
]

final_data = []

for song in songs:
    info = fetch_track_info(song)
    if isinstance(info, dict):
        name = info['Track Name']
        info['NFT Description'] = manual_descriptions.get(name, "✨ Description not available yet")
        final_data.append(info)

df = pd.DataFrame(final_data)
df.to_csv("sonic_currency_final.csv", index=False)

from google.colab import files
files.download("sonic_currency_final.csv")